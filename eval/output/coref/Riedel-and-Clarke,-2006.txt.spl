however , it is not possible to use this approach directly for a complex task like non-projective dependency parsing due to the exponential number of constraints required to prevent cycles occurring in the dependency graph .
instead of adding constraints which forbid all possible cycles in advance -LRB- this would result in an exponential number of constraints -RRB- we first solve the problem without any cycle constraints .
table 2 shows the average solve time -LRB- st -RRB- for sentences with respect to the number of tokens in each sentence for our system with constraints -LRB- cnstr -RRB- and the
while we have presented significant improvements using additional constraints , one may wonder whether the improvements are large enough to justify further research in this direction ; especially since mcdonald and pereira -LRB- 2006 -RRB- present an approximate algorithm which also makes more global decisions .
while previous approaches which use ilp for decoding have solved each integer linear program in one run , we incrementally add constraints and solve the resulting program until no more constraints are violated .
this allows us to efficiently use ilp for dependency parsing and add constraints which provide a significant improvement over the current state - of-the-art parser -LRB- mcdonald et al. , 2005b -RRB- on the dutch alpino corpus -LRB- see bl row in table 1 -RRB- .
