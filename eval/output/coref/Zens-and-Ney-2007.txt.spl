furthermore , the suffix array data structure of -LRB- callison-burch et al. , 2005 -RRB- requires a fair amount of memory , about 2 gb in their example , whereas
in this section , we will introduce the notation and state the problem of matching source phrases of an input graph g and the phrase-table , represented as prefix tree t. the input graph g has nodes 1 , ... , j , ... , j. the outgoing edges of a graph node j are numbered with 1 , ... , n , ... , n9 , i.e. an edge in the input graph is identified by a pair -LRB- j , n -RRB- .
the naive approach would be to enumerate all paths in the input graph from node j ' to node j , then lookup the corresponding source phrase in the phrase-table and add the translations , if there are any , to the set of translation options e -LRB- j ' , j -RRB- .
we show the number of distinct source phrases , the number of distinct source-target phrase pairs and the average number of target phrases -LRB- or translation candidates -RRB- per source phrase .
storing all phrase pairs for this test set in memory requires about 1.7 gb of memory , i.e. using the described data structures , we not only avoid the limitation to a specific test set , but we also reduce the memory requirements by about two orders of a magnitude .
