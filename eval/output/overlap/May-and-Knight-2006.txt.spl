it takes as input a bottom-up tree-to-weight transducer and returns as output a subsequential bottom-up tree-to-weight transducer such that the tree language recognized by is equivalent to that of and the output weight given input tree on is equal to the sum of all possible output weights given algorithm will terminate for automata that recognize finite tree languages .
since we want s hyperpath of a particular input tree to have as its associated weight the sum of the weights of the all of s hyperpaths of the input tree , we replace a set of hyperedges in that have the same input state vector and label with a single hyperedge in bearing the label and the sum of
since the algorithm builds new states progressively , we will need to represent a vector of states from the output transducer , typically depicted as v. we may construct the vector pair q w from v , where q is a vector of states of the input transducer and w is a vector of residual weights , by choosing a -LRB- state , weight -RRB- pair from each output state in v. v is the set of vector pairs q w constructed from v where each q is an input vector in a transition with label .
