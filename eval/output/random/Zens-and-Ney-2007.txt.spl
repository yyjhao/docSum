we convert the list of source phrases into a prefix tree and , thus , exploit that many of them share the same prefix .
when looking
1 -LRB- right -RRB- .
as pointed out in -LRB- mathias and byrne , 2006 -RRB- , one problem in speech translation is that we have to match the phrases of our phrase-table against the input word graph .
our goal is to find all non-empty sets of translation options e -LRB- j ' , j -RRB- .
note that we store only the target phrases a in the set of possible translations e -LRB- j ' , j -RRB- and not the source phrases .
in this section , we will analyze the computational complexity of the algorithm .
using the on-demand loading technique we described in sec .
using phrases of lengths larger than 4 or 5 does not result in further improvement .
in the following experiments on this task , we will use a limit of 5 for the source phrase length .
speech translation .
4 .
we do not observe the exponential explosion as for the naive algorithm .
for cn input , this length can be exceeded as the cns may contain c-transitions .
whereas the previous approaches required careful pruning of the cns , we are able to utilize the unpruned cns .
not only standard phrase-based systems can benefit from this data structure .
