with this model , we can extract the topic \/ subtopics from blog articles , reveal the correlation of these topics and different sentiments , and further model the dynamics of each topic and its associated sentiments .
no existing topic extraction work -LSB- 9 , 1 , 16 , 15 , 17 -RSB- could extract sentiment models from text , while no sentiment classification algorithm could model a mixture of topics simultaneously .
specifically , for the words related to a topic , we further categorize them into three sub-categories : -LRB- 1 -RRB- words about the topic with neutral opinions -LRB- e.g. , nano , price -RRB- ; -LRB- 2 -RRB- words representing the positive opinions of the topic -LRB- e.g. , awesome , love -RRB- ; and -LRB- 3 -RRB- words representing the negative opinions about the topic -LRB- e.g. , hate , bad -RRB- .
based on the concepts above , we define the major tasks of topic-sentiment analysis -LRB- tsa -RRB- on weblogs as : -LRB- 1 -RRB- learning general sentiment models : learn a sentiment model for positive opinions and a sentiment model for negative opinions , which are general enough to be used in new unlabeled collections .
however , we do notice that the tsm model
rather than directly using the learned sentiment models to analyze our target collection , we use them to define a prior on the sentiment models and estimate sentiment models -LRB- and the topic models -RRB- using the maximum a posterior estimator .
