in the general case , we know the interval -LSB- spi + 1 , epi + 1 -RSB- of a corresponding to suffixes that start with pi + 1 , m and want -LSB- spi , epi -RSB- , which is a subinterval of -LSB- c -LRB- pi -RRB- + 1 , c -LRB- pi + 1 -RRB- -RSB- .
the search can finish in three possible ways : -LRB- i -RRB- at some point there is no edge leaving from the current node that matches the characters that follow in p , which means that p does not occur in t ; -LRB- ii -RRB- we read all the characters of p and end up at a tree node -LRB- or in the middle of an edge -RRB- , in which case all the answers are in the subtree of the reached node -LRB- or edge -RRB- ; or -LRB- iii -RRB- we reach a leaf of the suffix tree without having read the whole
10.2 the lz-index of kc -LRB- 9 , ~ t -RRB- arkkc -LRB- 9 , ~ t -RRB- ainen and ukkonen -LRB- ku-lzi -RRB- the lz-index of kc -LRB- 9 , ~ t -RRB- arkkc -LRB- 9 , ~ t -RRB- ainen and ukkonen -LSB- 1996a -RSB- -LRB- ku-lzi -RRB- uses a suffix tree that indexes only the beginnings of phrases in a lz76-like parsing of t. although they only prove -LRB- using lemma 7 -RRB- that their index is succinct , taking o -LRB- n log ^ -RRB- bits of space , lemma 8 shows that it actually requires o -LRB- nhk -RRB- bits of space -LRB- plus text -RRB- .
