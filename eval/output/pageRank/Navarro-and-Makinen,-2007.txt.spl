we can extract such a prefix by following the ^ values recursively : i , ^ -LSB- i -RSB- , ^ -LSB- ^ -LSB- i -RSB- -RSB- , ... , as they point to ta -LSB- i -RSB- , ta -LSB- i -RSB- + , , ta -LSB- i -RSB- + 2 , ... after at most m steps , we have revealed enough characters from the
to discover each such character ta -LSB- j -RSB- , for j = i , ^ -LSB- i -RSB- , ^ -LSB- ^ -LSB- i -RSB- -RSB- , ... , we can use the same table c : because the first characters ta -LSB- j -RSB- of the suffixes ta -LSB- j -RSB- , n , are in alphabetic order in a , ta -LSB- j -RSB- must be the character c such that c -LSB- c -RSB- &lt; j &lt; c -LSB- c + 1 -RSB- .
the content of smallocc -LSB- c , o , b , v -RSB- is occ -LRB- c , o -RRB- for the text obtained by decompressing b starting with a move-to-front transform initialized as v. thus , rank , -LRB- bc -LSB- qt + 1 , qt + t -RSB- , r -RRB- = smallocc -LSB- c , r , b , mtf -LSB- q -RSB- -RSB- is computed in constant time , where b is the piece of the compressed tbwt starting at position superblockpos -LSB- q ^ -RSB- + blockpos -LSB- q -RSB- .
ferragina and manzini -LSB- 2005 -RSB- use for range the structure of alstrup et al. -LSB- 2000 -RSB- -LRB- see section 6.4 -RRB- that can store n ^ points in -LSB- 1 , n ^ -RSB- x -LSB- 1 , n ^ -RSB- using o -LRB- n ^ log1 + ^ n ^ -RRB- bits for any ^ &gt; 0 , so that they answer a query with res results in time o -LRB- log log n ^ + res -RRB- .
