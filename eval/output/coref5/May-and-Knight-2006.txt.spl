we will present an algorithm for
it takes as input a bottom-up tree-to-weight transducer and returns as output a subsequential bottom-up tree-to-weight transducer such that the tree language recognized by is equivalent to that of and the output weight given input tree on is equal to the sum of all possible output weights given algorithm will terminate for automata that recognize finite tree languages .
since the algorithm builds new states progressively , we will need to represent a vector of states from the output transducer , typically depicted as v. we may construct the vector pair q w from v , where q is a vector of states of the input transducer and w is a vector of residual weights , by choosing a -LRB- state , weight -RRB- pair from each output state in v. v is the set of vector pairs q w constructed from v where each q is an input vector in a transition with label .
the top-scoring parse after determinization is different from the top - scoring parse before determinization for 49.1 % of the forests , and when the determinization method is approximated by crunching the top-500 parses from the undeterminized list only 55.9 % of the top - scoring parses are the same , indicating the crunching method is not a very good approximation of determinization .
